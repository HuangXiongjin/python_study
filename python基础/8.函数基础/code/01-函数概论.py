"""---author---hxj"""

# 1.什么是函数
"""
函数就是对实现特定功能的代码的封装
"""
# 2.函数的分类
"""
系统函数(内置函数)  - 系统已经声明好的函数(类似已经造好的机器)，程序员会用就行,
                   例如: print\input\sum\max\hex\len\id\type等...
                
自定义函数 - 程序员自己声明的函数(自己造机器)
"""

# 3.声明函数(造机器)
"""
1)语法:
def 函数名(形参列表):
    函数说明文档
    函数体
    
2)说明:
def  -  python中声明函数的关键字(固定写法)
函数名  -  和变量名的要求一样
():   -  固定写法
形参列表  -  以'变量名1,变量名2,变量名3,...'的形式存在；每个变量就要形参。
            形参的个数根据情况可以没有也可以有多个。
            形参的作用是将函数外面的数据传递到函数里面
函数说明文档  -  用三个双引号引来的字符串；作用是对函数的功能进行说明
函数体   -  和def保持一个缩颈的一行或者多行语句。（实现函数功能的多条语句）

3)初学者声明函数的步骤
a.确定函数的功能
b.根据函数功能确定函数名
c.确定函数的参数: 看实现函数的功能需不需要从外面传值，需要几个？
d.实现函数的功能

注意(重要!!!!):  声明函数的时候不会执行函数体
"""


# 写一个函数，求两个数的和并且打印
def sum1(num1, num2):
    """
    函数功能说明部分 - 求和
    :param num1: 参数说明， 数字1
    :param num2: 参数说明， 数字2
    :return: 返回值说明
    """
    print('=======')
    print(num1 + num2)


print('~~~~~~')


# 4.函数的调用（调用函数相当于使用机器）
"""
1)语法
函数名(实参列表)

2)说明
函数名  -  已经声明过的函数的函数名
()  -  固定写法
实参列表  -  以'值1, 值2, 值3,...'形式存在; 这儿的每个值就叫实参；
            实参是用来给形参赋值的
"""
sum1(10, 20)
# sum1(10)   # TypeError: sum1() missing 1 required positional argument: 'num2'
# sum1(10, 20, 30)  # TypeError: sum1() takes 2 positional arguments but 3 were given

# 同一个函数可以调用多次
sum1(100, 300)




