"""---author==hxj"""
# 位运算操作的是数字的补码的每一位；位运算因为是直接操作计算机存储空间的每一位，所以执行效率要比一般的运算要高
# 5.位运算：&（按位与运算），|（按位或运算），^(按位异或)，~(按位取反)， <<(按位左移)，>>（按位右移）
"""
a = 00111100
b = 00001101

1)按位与运算符&：参加运算的两个值，如果两个相应位都为1，则该位的结果为1，否则为0
a & b = 00001100

2)按位或运算符|：只要对应的两个二进位有一个为1时，结果位就为1
a | b = 00111101

3)按位异或运算符：当两个对应的二进位相异时，结果为1(异或两次同一个数，返回本身)
a ^ b = 00110001
a ^ b ^ b = 00111100
4)按位取反运算符~：对数据的每个二进制位取反，即把1变为0，把0变为1
~a = 11000011

5)左移运算符：运算数的各二进制位全部左移若干位，由<<右边的数字指定移动的位数，高位丢弃，低位补0.
a << 2 = 11110000

6)右移运算符：运算数的各二进制位全部右移若干位，由>>右边的数字指定移动的位数.
a >> 2 = 00001111
"""
a = 60
b = 13
c = 0
c1 = a & b
print("a&b", c1)
print(bin(c1))
c2 = a | b
print("a | b", c2)
print(bin(c2))
c3 = a ^ b
print("a ^ b", c3)
print(bin(c3))
c4 = ~a
print("a~", c4)
print(bin(-61))
a1 = 60
print(~a1)
print(bin(~61))