"""---author==hxj---"""
# 1.生成器(generator)
"""
1)生成器就是迭代器中的一种；
2)调用一个带yield关键字的函数就可以得到一个生成器
如果一个函数中有yield关键字：
a. 调用函数不会执行函数体
b. 函数调用表达式的值不是函数的返回值，而是一个生成器对象
"""
# def func1():
#     print("=========")
#     return 100
#
#
# print('外部', func1())


def func1():
    yield
    print("=========")
    return 100


print('外部', func1())


# 2.生成器产生数据的原理
"""
1)一个生成器能产生多少数据，就看执行完生成器对应的函数的函数体能遇到几次yield;
  yield后面的值就是生成器能够产生的数据
2）每次获取生成器中的元素的时候，都是先去执行函数体，知道遇到yield，并且将yield后面的值
作为获取元素的结果；并且保留结束的位置，下次获取下一个值的时候，从上次结束的位置接着执行函数体，
直到遇到yield....
如果从开始执行到函数结束都没有遇到yield，就会报StopIteration错
"""